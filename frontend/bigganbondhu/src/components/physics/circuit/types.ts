// Common types used across circuit simulator components

export type ComponentType =
  | "battery"
  | "resistor"
  | "wire"
  | "switch"
  | "bulb"
  | "led"
  | "capacitor"
  | "inductor";

export type CircuitComponent = {
  id: string;
  type: ComponentType;
  x: number;
  y: number;
  rotation: number;
  connections: {
    from: { x: number; y: number };
    to: { x: number; y: number };
  };
  properties: {
    voltage?: number;
    resistance?: number;
    capacitance?: number;
    inductance?: number;
    state?: "on" | "off";
    color?: string;
    scale?: number;
  };
  selected?: boolean;
  hovered?: boolean;
};

export type Connection = {
  from: string; // component id
  to: string; // component id
  fromPos: { x: number; y: number };
  toPos: { x: number; y: number };
  current?: number;
  voltage?: number;
};

export type CircuitState = {
  components: CircuitComponent[];
  connections: Connection[];
  totalVoltage: number;
  totalResistance: number;
  totalCurrent: number;
};

export type CircuitMode = "series" | "parallel" | "free" | "challenge";

export interface Challenge {
  mode: "series" | "parallel" | "free";
  totalResistance?: number;
  totalVoltage?: number;
  description?: string;
}

export interface CircuitSimulatorProps {
  voltage: number;
  resistance: number;
  showLabels: boolean;
  mode?: CircuitMode;
  showCurrent?: boolean;
  challenge?: Challenge;
  onChallengeResult?: (result: "success" | "error" | "warning") => void;
}

export const componentPalette = [
  {
    type: "battery" as ComponentType,
    label: "‡¶¨‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∞‡¶ø",
    icon: "üîã",
    tooltip: "‡¶≠‡ßã‡¶≤‡ßç‡¶ü‡ßá‡¶ú ‡¶∏‡¶∞‡¶¨‡¶∞‡¶æ‡¶π‡¶ï‡¶æ‡¶∞‡ßÄ",
  },
  {
    type: "resistor" as ComponentType,
    label: "‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡¶∞",
    icon: "üü´",
    tooltip: "‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏ ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶®‡¶ï‡¶æ‡¶∞‡ßÄ",
  },
  {
    type: "wire" as ComponentType,
    label: "‡¶§‡¶æ‡¶∞",
    icon: "‚ûñ",
    tooltip: "‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ó‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶§‡¶æ‡¶∞",
  },
  {
    type: "switch" as ComponentType,
    label: "‡¶∏‡ßÅ‡¶á‡¶ö",
    icon: "üîò",
    tooltip: "‡¶∏‡¶æ‡¶∞‡ßç‡¶ï‡¶ø‡¶ü ‡¶ö‡¶æ‡¶≤‡ßÅ/‡¶¨‡¶®‡ßç‡¶ß",
  },
  {
    type: "bulb" as ComponentType,
    label: "‡¶¨‡¶æ‡¶≤‡ßç‡¶¨",
    icon: "üí°",
    tooltip: "‡¶Ü‡¶≤‡ßã ‡¶¶‡ßá‡¶ñ‡¶æ‡¶Ø‡¶º",
  },
  {
    type: "led" as ComponentType,
    label: "‡¶è‡¶≤‡¶á‡¶°‡¶ø",
    icon: "üîÜ",
    tooltip: "‡¶°‡¶æ‡¶Ø‡¶º‡ßã‡¶° ‡¶≤‡¶æ‡¶á‡¶ü",
  },
  {
    type: "capacitor" as ComponentType,
    label: "‡¶ï‡ßç‡¶Ø‡¶æ‡¶™‡¶æ‡¶∏‡¶ø‡¶ü‡¶∞",
    icon: "‚ö°",
    tooltip: "‡¶ö‡¶æ‡¶∞‡ßç‡¶ú ‡¶∏‡¶û‡ßç‡¶ö‡¶Ø‡¶º ‡¶ï‡¶∞‡ßá",
  },
  {
    type: "inductor" as ComponentType,
    label: "‡¶á‡¶®‡ßç‡¶°‡¶æ‡¶ï‡ßç‡¶ü‡¶∞",
    icon: "üß≤",
    tooltip: "‡¶ö‡ßå‡¶Æ‡ßç‡¶¨‡¶ï ‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá",
  },
];

// Component size definitions
export const componentSizes = {
  battery: { width: 60, height: 40 },
  resistor: { width: 80, height: 30 },
  wire: { width: 20, height: 20 },
  switch: { width: 50, height: 30 },
  bulb: { width: 50, height: 50 },
  led: { width: 40, height: 40 },
  capacitor: { width: 60, height: 40 },
  inductor: { width: 60, height: 40 },
};

// Connection point definitions (normalized -1 to 1 coordinates)
export const connectionPoints = {
  battery: {
    input: [{ x: -1, y: 0 }],
    output: [{ x: 1, y: 0 }],
  },
  resistor: {
    input: [{ x: -1, y: 0 }],
    output: [{ x: 1, y: 0 }],
  },
  wire: {
    input: [{ x: 0, y: 0 }],
    output: [{ x: 0, y: 0 }],
  },
  switch: {
    input: [{ x: -1, y: 0 }],
    output: [{ x: 1, y: 0 }],
  },
  bulb: {
    input: [{ x: 0, y: 1 }],
    output: [{ x: 0, y: -1 }],
  },
  led: {
    input: [{ x: -1, y: 0 }],
    output: [{ x: 1, y: 0 }],
  },
  capacitor: {
    input: [{ x: -1, y: 0 }],
    output: [{ x: 1, y: 0 }],
  },
  inductor: {
    input: [{ x: -1, y: 0 }],
    output: [{ x: 1, y: 0 }],
  },
};
